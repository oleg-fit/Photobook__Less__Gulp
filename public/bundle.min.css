#advantage {
  padding: 40px 40px 60px;
  text-align: center;
  background-color: #f3f0e7;
}
#advantage h1 {
  margin-bottom: 35px;
  font-size: 40px;
  font-weight: normal;
  letter-spacing: 2px;
}
#advantage .row {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: distribute;
      justify-content: space-around;
  margin-bottom: 60px;
}
#advantage .row .col {
  padding: 10px;
}
#advantage .row .col img {
  margin-bottom: 20px;
}
#advantage .row .col h3 {
  margin-bottom: 20px;
}

.btn {
  padding: 15px 20px;
  font-size: 20px;
  border: none;
  border-radius: 10px;
  text-transform: uppercase;
  outline: none;
  cursor: pointer;
  transition: .1s all;
}
.btn:active {
  box-shadow: inset 0 0 20px -3px rgba(0, 0, 0, 0.6);
}
.btn-line {
  border: 1px solid #000;
  color: #000;
  background: transparent;
}
.btn-red {
  background-color: #ee5454;
  color: #fff;
}

#features {
  padding: 40px 0 60px;
  text-align: center;
}
#features img {
  margin-bottom: 20px;
}
#features .text {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: distribute;
      justify-content: space-around;
  margin: 0 auto;
  width: 950px;
}
#features .text > div {
  width: 25%;
  font-size: 20px;
  font-weight: bold;
}
#features .text > div > div {
  position: relative;
}
#features .text > div.first > div {
  right: 45px;
}
#features .text > div.second > div {
  right: 14px;
}
#features .text > div.third > div {
  left: 20px;
}
#features .text > div.fourth > div {
  left: 54px;
}

#header {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
      flex-direction: column;
  -ms-flex-align: center;
      align-items: center;
  -ms-flex-pack: center;
      justify-content: center;
  -ms-flex-pack: start;
      justify-content: flex-start;
  padding-top: 40px;
  height: 547px;
  background: url('img/header_bg.jpg') no-repeat;
  background-size: cover;
}
#header .text {
  text-align: center;
  margin-bottom: 60px;
}
#header .text * {
  font-weight: normal;
}
#header .text h1 {
  margin-bottom: 20px;
  font-size: 60px;
}
#header .text h4 {
  font-size: 30px;
}

@import url('https://fonts.googleapis.com/css?family=Roboto&display=swap');
html,
body {
  margin: 0;
  padding: 0;
  width: 100%;
  font-family: 'Roboto', sans-serif;
  color: #000;
}
h1,
h2,
h3,
h4,
h5,
h6,
p {
  margin: 0;
  padding: 0;
}
a {
  text-decoration: none;
}
.view-port {
  margin: 0 auto;
  width: 1000px;
}
.wrapper {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
      flex-direction: column;
  width: 100%;
  overflow: hidden;
  background-color: #fff;
}

#nav {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: justify;
      justify-content: space-between;
  -ms-flex-align: center;
      align-items: center;
  height: 80px;
}
#nav .left i {
  margin-right: 20px;
  font-size: 25px;
  position: relative;
  top: 2px;
  cursor: pointer;
}
#nav span {
  font-size: 20px;
  font-weight: bold;
}
#nav .right {
  display: -ms-flexbox;
  display: flex;
}
#nav .right .phone {
  margin-right: 25px;
  padding: 5px 15px;
  text-align: center;
  border-radius: 10px;
  background-color: #ffd200;
}
#nav .right .phone span {
  font-size: 14px;
  border-bottom: 1px dotted #000;
}
#nav .right i {
  font-size: 25px;
  cursor: pointer;
}

#solutions {
  padding: 50px 40px 70px;
}
#solutions h1 {
  margin-bottom: 60px;
  font-size: 40px;
  font-weight: normal;
  text-align: center;
}
#solutions .row {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: distribute;
      justify-content: space-around;
}
#solutions .row .tile {
  padding: 5px;
  width: 25%;
  position: relative;
  border-radius: 5px;
  background-color: #ffd200;
}
#solutions .row .tile .bestseller {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: center;
      justify-content: center;
  position: relative;
}
#solutions .row .tile .bestseller > div {
  position: absolute;
  background-color: #ffd200;
}
#solutions .row .tile .bestseller .left {
  width: 30px;
  height: 27px;
  left: 39px;
  top: -17px;
  transform: rotate(45deg);
}
#solutions .row .tile .bestseller .text {
  padding: 6px 30px 0;
  font-size: 13px;
  font-weight: bold;
  color: #ee5454;
  text-transform: uppercase;
  top: -24px;
}
#solutions .row .tile .bestseller .right {
  height: 26px;
  width: 30px;
  transform: rotate(45deg);
  right: 36px;
  top: -17px;
}
#solutions .row .tile .header {
  padding: 30px;
}
#solutions .row .tile .header h3 {
  font-size: 25px;
  font-weight: normal;
}
#solutions .row .tile .content {
  margin-bottom: 10px;
  padding: 15px;
  min-height: 200px;
  position: relative;
  background-color: #fff;
}
#solutions .row .tile .content ul {
  margin: 0;
  padding: 0;
  padding: 10px 0 0 30px;
  list-style-image: url('img/checkbox.png');
}
#solutions .row .tile .content ul li {
  padding-left: 10px;
  font-size: 13px;
  font-weight: bold;
}
#solutions .row .tile .content ul li span {
  position: relative;
  top: -7px;
}
#solutions .row .tile .content .cost {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: center;
      justify-content: center;
  width: 100%;
  font-size: 50px;
  position: absolute;
  bottom: 10px;
  right: 5px;
}
#solutions .row .tile .footer {
  margin-bottom: 5px;
  font-weight: bold;
  text-decoration: none;
}

#steps {
  padding: 50px 0;
  text-align: center;
}
#steps .tiles {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: justify;
      justify-content: space-between;
  margin-bottom: 40px;
}
#steps .tiles .tile {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
      flex-direction: column;
  width: 28%;
}
#steps .tiles .tile .header {
  margin-bottom: 5px;
  padding: 10px;
  background-color: #ffd200;
  font-weight: bold;
  text-align: center;
  letter-spacing: 2px;
  border-top-left-radius: 5px;
  border-top-right-radius: 5px;
}
#steps .tiles .tile .content {
  -ms-flex-positive: 1;
      flex-grow: 1;
  margin-bottom: 5px;
  padding: 20px;
  text-align: left;
  background-color: #f3f0e7;
  border-bottom-left-radius: 5px;
  border-bottom-right-radius: 5px;
}
#steps .tiles .tile .content p {
  margin-bottom: 5px;
  font-size: 13px;
}
#steps .tiles .tile .content p.red {
  color: #ee5454;
}
#steps .tiles .tile .content ul {
  margin: 0;
  padding: 0;
  padding: 10px 0 0 13px;
  font-size: 13px;
}
#steps .tiles .tile .content ul li {
  line-height: 2;
}

#testimonials {
  min-height: 767px;
  background: url("img/footer_bg.jpg") no-repeat;
  background-size: cover;
}
#testimonials .contant {
  padding: 20px;
  width: 50%;
}
#testimonials .contant h1 {
  margin-bottom: 20px;
  font-size: 40px;
  font-weight: normal;
  letter-spacing: 2px;
}
#testimonials .contant .author {
  display: -ms-flexbox;
  display: flex;
  margin-bottom: 15px;
  -ms-flex-align: center;
      align-items: center;
}
#testimonials .contant .author img {
  margin-bottom: 5px;
}
#testimonials .contant .author > div {
  margin-left: 30px;
  text-align: center;
}
#testimonials .contant .text {
  margin-bottom: 30px;
}
#testimonials .contant .text p {
  margin-bottom: 10px;
  font-size: 13px;
  font-weight: bold;
  line-height: 1.5;
}
#testimonials .contant .next {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: end;
      justify-content: flex-end;
  margin-bottom: 100px;
}
#testimonials .contant .next span {
  cursor: pointer;
}
#testimonials .contant .next i {
  margin-left: 10px;
}
#testimonials .contant .button {
  text-align: center;
}



/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFkdmFudGFnZS5sZXNzIiwiYnVuZGxlLm1pbi5jc3MiLCJidXR0b24ubGVzcyIsImZlYXR1cmVzLmxlc3MiLCJoZWFkZXIubGVzcyIsInBhcnRpYWxzL21peGlucy5sZXNzIiwibWFpbi5sZXNzIiwibmF2Lmxlc3MiLCJzb2x1dGlvbnMubGVzcyIsInN0ZXBzLmxlc3MiLCJ0ZXN0aW1vbmlhbHMubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQTtFQUNJLHdCQUFBO0VBQ0EsbUJBQUE7RUFDQSwwQkFBQTtDQ0ZIO0FESUc7RUFDSSxvQkFBQTtFQUNBLGdCQUFBO0VBQ0Esb0JBQUE7RUFDQSxvQkFBQTtDQ0ZQO0FES0c7RUFDSSxxQkFBQTtFQUFBLGNBQUE7RUFDQSwwQkFBQTtNQUFBLDhCQUFBO0VBQ0Esb0JBQUE7Q0NIUDtBREtPO0VBQ0ksY0FBQTtDQ0hYO0FES1c7RUFDSSxvQkFBQTtDQ0hmO0FETVc7RUFDSSxvQkFBQTtDQ0pmOztBQ3JCRDtFQUNJLG1CQUFBO0VBQ0EsZ0JBQUE7RUFDQSxhQUFBO0VBQ0Msb0JBQUE7RUFDRCwwQkFBQTtFQUNBLGNBQUE7RUFDQSxnQkFBQTtFQUNBLG9CQUFBO0NEd0JIO0FDdEJHO0VBQ0ksbURBQUE7Q0R3QlA7QUNyQkc7RUFDSSx1QkFBQTtFQUNBLFlBQUE7RUFDQSx3QkFBQTtDRHVCUDtBQ3BCRztFQUNJLDBCQUFBO0VBQ0EsWUFBQTtDRHNCUDs7QUU1Q0Q7RUFDSSxxQkFBQTtFQUNBLG1CQUFBO0NGK0NIO0FFN0NHO0VBQ0ksb0JBQUE7Q0YrQ1A7QUU1Q0c7RUFDSSxxQkFBQTtFQUFBLGNBQUE7RUFDQSwwQkFBQTtNQUFBLDhCQUFBO0VBQ0EsZUFBQTtFQUNBLGFBQUE7Q0Y4Q1A7QUU1Q087RUFDSSxXQUFBO0VBQ0EsZ0JBQUE7RUFDQSxrQkFBQTtDRjhDWDtBRTVDVztFQUNJLG1CQUFBO0NGOENmO0FFM0NXO0VBQ0ksWUFBQTtDRjZDZjtBRTFDVztFQUNJLFlBQUE7Q0Y0Q2Y7QUV6Q1c7RUFDSSxX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QTtFQUFBLGNBQUE7RUFDQSxtQkFBQTtNQUFBLDBCQUFBO0VBQ0EscUJBQUE7Q1QyVFg7QVN6VFc7RUFDSSxnQkFBQTtDVDJUZjtBU3hUVztFQUNJLGtCQUFBO0NUMFRmO0FTdFRPO0VBQ0ksbUJBQUE7Q1R3VFgiLCJmaWxlIjoiYnVuZGxlLm1pbi5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0IFwicGFydGlhbHMvcGFyYW1zXCI7XHJcbkBpbXBvcnQgXCJwYXJ0aWFscy9taXhpbnNcIjtcclxuXHJcbiNhZHZhbnRhZ2Uge1xyXG4gICAgcGFkZGluZzogNDBweCA0MHB4IDYwcHg7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBAbGlnaHQtY29sb3I7XHJcblxyXG4gICAgJiBoMSB7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMzVweDtcclxuICAgICAgICBmb250LXNpemU6IDQwcHg7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcclxuICAgICAgICBsZXR0ZXItc3BhY2luZzogMnB4O1xyXG4gICAgfVxyXG5cclxuICAgICYgLnJvdyB7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiA2MHB4O1xyXG5cclxuICAgICAgICAmIC5jb2wge1xyXG4gICAgICAgICAgICBwYWRkaW5nOiAxMHB4O1xyXG5cclxuICAgICAgICAgICAgJiBpbWcge1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgJiBoMyB7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59IiwiI2FkdmFudGFnZSB7XG4gIHBhZGRpbmc6IDQwcHggNDBweCA2MHB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmM2YwZTc7XG59XG4jYWR2YW50YWdlIGgxIHtcbiAgbWFyZ2luLWJvdHRvbTogMzVweDtcbiAgZm9udC1zaXplOiA0MHB4O1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBsZXR0ZXItc3BhY2luZzogMnB4O1xufVxuI2FkdmFudGFnZSAucm93IHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XG4gIG1hcmdpbi1ib3R0b206IDYwcHg7XG59XG4jYWR2YW50YWdlIC5yb3cgLmNvbCB7XG4gIHBhZGRpbmc6IDEwcHg7XG59XG4jYWR2YW50YWdlIC5yb3cgLmNvbCBpbWcge1xuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xufVxuI2FkdmFudGFnZSAucm93IC5jb2wgaDMge1xuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xufVxuXG4uYnRuIHtcbiAgcGFkZGluZzogMTVweCAyMHB4O1xuICBmb250LXNpemU6IDIwcHg7XG4gIGJvcmRlcjogbm9uZTtcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgb3V0bGluZTogbm9uZTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICB0cmFuc2l0aW9uOiAuMXMgYWxsO1xufVxuLmJ0bjphY3RpdmUge1xuICBib3gtc2hhZG93OiBpbnNldCAwIDAgMjBweCAtM3B4IHJnYmEoMCwgMCwgMCwgMC42KTtcbn1cbi5idG4tbGluZSB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICMwMDA7XG4gIGNvbG9yOiAjMDAwO1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbn1cbi5idG4tcmVkIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2VlNTQ1NDtcbiAgY29sb3I6ICNmZmY7XG59XG5cbiNmZWF0dXJlcyB7XG4gIHBhZGRpbmc6IDQwcHggMCA2MHB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG4jZmVhdHVyZXMgaW1nIHtcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcbn1cbiNmZWF0dXJlcyAudGV4dCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xuICBtYXJnaW46IDAgYXV0bztcbiAgd2lkdGg6IDk1MHB4O1xufVxuI2ZlYXR1cmVzIC50ZXh0ID4gZGl2IHtcbiAgd2lkdGg6IDI1JTtcbiAgZm9udC1zaXplOiAyMHB4O1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cbiNmZWF0dXJlcyAudGV4dCA+IGRpdiA+IGRpdiB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cbiNmZWF0dXJlcyAudGV4dCA+IGRpdi5maXJzdCA+IGRpdiB7XG4gIHJpZ2h0OiA0NXB4O1xufVxuI2ZlYXR1cmVzIC50ZXh0ID4gZGl2LnNlY29uZCA+IGRpdiB7XG4gIHJpZ2h0OiAxNHB4O1xufVxuI2ZlYXR1cmVzIC50ZXh0ID4gZGl2LnRoaXJkID4gZGl2IHtcbiAgbGVmdDogMjBweDtcbn1cbiNmZWF0dXJlcyAudGV4dCA+IGRpdi5mb3VydGggPiBkaXYge1xuICBsZWZ0OiA1NHB4O1xufVxuXG4jaGVhZGVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgcGFkZGluZy10b3A6IDQwcHg7XG4gIGhlaWdodDogNTQ3cHg7XG4gIGJhY2tncm91bmQ6IHVybCgnaW1nL2hlYWRlcl9iZy5qcGcnKSBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG59XG4jaGVhZGVyIC50ZXh0IHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBtYXJnaW4tYm90dG9tOiA2MHB4O1xufVxuI2hlYWRlciAudGV4dCAqIHtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbn1cbiNoZWFkZXIgLnRleHQgaDEge1xuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICBmb250LXNpemU6IDYwcHg7XG59XG4jaGVhZGVyIC50ZXh0IGg0IHtcbiAgZm9udC1zaXplOiAzMHB4O1xufVxuXG5AaW1wb3J0IHVybCgnaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PVJvYm90byZkaXNwbGF5PXN3YXAnKTtcbmh0bWwsXG5ib2R5IHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICB3aWR0aDogMTAwJTtcbiAgZm9udC1mYW1pbHk6ICdSb2JvdG8nLCBzYW5zLXNlcmlmO1xuICBjb2xvcjogIzAwMDtcbn1cbmgxLFxuaDIsXG5oMyxcbmg0LFxuaDUsXG5oNixcbnAge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG59XG5hIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuLnZpZXctcG9ydCB7XG4gIG1hcmdpbjogMCBhdXRvO1xuICB3aWR0aDogMTAwMHB4O1xufVxuLndyYXBwZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICB3aWR0aDogMTAwJTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbn1cblxuI25hdiB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgaGVpZ2h0OiA4MHB4O1xufVxuI25hdiAubGVmdCBpIHtcbiAgbWFyZ2luLXJpZ2h0OiAyMHB4O1xuICBmb250LXNpemU6IDI1cHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdG9wOiAycHg7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cbiNuYXYgc3BhbiB7XG4gIGZvbnQtc2l6ZTogMjBweDtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG4jbmF2IC5yaWdodCB7XG4gIGRpc3BsYXk6IGZsZXg7XG59XG4jbmF2IC5yaWdodCAucGhvbmUge1xuICBtYXJnaW4tcmlnaHQ6IDI1cHg7XG4gIHBhZGRpbmc6IDVweCAxNXB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmQyMDA7XG59XG4jbmF2IC5yaWdodCAucGhvbmUgc3BhbiB7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IGRvdHRlZCAjMDAwO1xufVxuI25hdiAucmlnaHQgaSB7XG4gIGZvbnQtc2l6ZTogMjVweDtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4jc29sdXRpb25zIHtcbiAgcGFkZGluZzogNTBweCA0MHB4IDcwcHg7XG59XG4jc29sdXRpb25zIGgxIHtcbiAgbWFyZ2luLWJvdHRvbTogNjBweDtcbiAgZm9udC1zaXplOiA0MHB4O1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG4jc29sdXRpb25zIC5yb3cge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcbn1cbiNzb2x1dGlvbnMgLnJvdyAudGlsZSB7XG4gIHBhZGRpbmc6IDVweDtcbiAgd2lkdGg6IDI1JTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmQyMDA7XG59XG4jc29sdXRpb25zIC5yb3cgLnRpbGUgLmJlc3RzZWxsZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuI3NvbHV0aW9ucyAucm93IC50aWxlIC5iZXN0c2VsbGVyID4gZGl2IHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZkMjAwO1xufVxuI3NvbHV0aW9ucyAucm93IC50aWxlIC5iZXN0c2VsbGVyIC5sZWZ0IHtcbiAgd2lkdGg6IDMwcHg7XG4gIGhlaWdodDogMjdweDtcbiAgbGVmdDogMzlweDtcbiAgdG9wOiAtMTdweDtcbiAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xufVxuI3NvbHV0aW9ucyAucm93IC50aWxlIC5iZXN0c2VsbGVyIC50ZXh0IHtcbiAgcGFkZGluZzogNnB4IDMwcHggMDtcbiAgZm9udC1zaXplOiAxM3B4O1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgY29sb3I6ICNlZTU0NTQ7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIHRvcDogLTI0cHg7XG59XG4jc29sdXRpb25zIC5yb3cgLnRpbGUgLmJlc3RzZWxsZXIgLnJpZ2h0IHtcbiAgaGVpZ2h0OiAyNnB4O1xuICB3aWR0aDogMzBweDtcbiAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xuICByaWdodDogMzZweDtcbiAgdG9wOiAtMTdweDtcbn1cbiNzb2x1dGlvbnMgLnJvdyAudGlsZSAuaGVhZGVyIHtcbiAgcGFkZGluZzogMzBweDtcbn1cbiNzb2x1dGlvbnMgLnJvdyAudGlsZSAuaGVhZGVyIGgzIHtcbiAgZm9udC1zaXplOiAyNXB4O1xuICBmb250LXdlaWdodDogbm9ybWFsO1xufVxuI3NvbHV0aW9ucyAucm93IC50aWxlIC5jb250ZW50IHtcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcbiAgcGFkZGluZzogMTVweDtcbiAgbWluLWhlaWdodDogMjAwcHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbn1cbiNzb2x1dGlvbnMgLnJvdyAudGlsZSAuY29udGVudCB1bCB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgcGFkZGluZzogMTBweCAwIDAgMzBweDtcbiAgbGlzdC1zdHlsZS1pbWFnZTogdXJsKCdpbWcvY2hlY2tib3gucG5nJyk7XG59XG4jc29sdXRpb25zIC5yb3cgLnRpbGUgLmNvbnRlbnQgdWwgbGkge1xuICBwYWRkaW5nLWxlZnQ6IDEwcHg7XG4gIGZvbnQtc2l6ZTogMTNweDtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG4jc29sdXRpb25zIC5yb3cgLnRpbGUgLmNvbnRlbnQgdWwgbGkgc3BhbiB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdG9wOiAtN3B4O1xufVxuI3NvbHV0aW9ucyAucm93IC50aWxlIC5jb250ZW50IC5jb3N0IHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIHdpZHRoOiAxMDAlO1xuICBmb250LXNpemU6IDUwcHg7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYm90dG9tOiAxMHB4O1xuICByaWdodDogNXB4O1xufVxuI3NvbHV0aW9ucyAucm93IC50aWxlIC5mb290ZXIge1xuICBtYXJnaW4tYm90dG9tOiA1cHg7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbiNzdGVwcyB7XG4gIHBhZGRpbmc6IDUwcHggMDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuI3N0ZXBzIC50aWxlcyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgbWFyZ2luLWJvdHRvbTogNDBweDtcbn1cbiNzdGVwcyAudGlsZXMgLnRpbGUge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICB3aWR0aDogMjglO1xufVxuI3N0ZXBzIC50aWxlcyAudGlsZSAuaGVhZGVyIHtcbiAgbWFyZ2luLWJvdHRvbTogNXB4O1xuICBwYWRkaW5nOiAxMHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZkMjAwO1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBsZXR0ZXItc3BhY2luZzogMnB4O1xuICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiA1cHg7XG4gIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiA1cHg7XG59XG4jc3RlcHMgLnRpbGVzIC50aWxlIC5jb250ZW50IHtcbiAgZmxleC1ncm93OiAxO1xuICBtYXJnaW4tYm90dG9tOiA1cHg7XG4gIHBhZGRpbmc6IDIwcHg7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmM2YwZTc7XG4gIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDVweDtcbiAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDVweDtcbn1cbiNzdGVwcyAudGlsZXMgLnRpbGUgLmNvbnRlbnQgcCB7XG4gIG1hcmdpbi1ib3R0b206IDVweDtcbiAgZm9udC1zaXplOiAxM3B4O1xufVxuI3N0ZXBzIC50aWxlcyAudGlsZSAuY29udGVudCBwLnJlZCB7XG4gIGNvbG9yOiAjZWU1NDU0O1xufVxuI3N0ZXBzIC50aWxlcyAudGlsZSAuY29udGVudCB1bCB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgcGFkZGluZzogMTBweCAwIDAgMTNweDtcbiAgZm9udC1zaXplOiAxM3B4O1xufVxuI3N0ZXBzIC50aWxlcyAudGlsZSAuY29udGVudCB1bCBsaSB7XG4gIGxpbmUtaGVpZ2h0OiAyO1xufVxuXG4jdGVzdGltb25pYWxzIHtcbiAgbWluLWhlaWdodDogNzY3cHg7XG4gIGJhY2tncm91bmQ6IHVybChcImltZy9mb290ZXJfYmcuanBnXCIpIG5vLXJlcGVhdDtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3Zlcjtcbn1cbiN0ZXN0aW1vbmlhbHMgLmNvbnRhbnQge1xuICBwYWRkaW5nOiAyMHB4O1xuICB3aWR0aDogNTAlO1xufVxuI3Rlc3RpbW9uaWFscyAuY29udGFudCBoMSB7XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gIGZvbnQtc2l6ZTogNDBweDtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgbGV0dGVyLXNwYWNpbmc6IDJweDtcbn1cbiN0ZXN0aW1vbmlhbHMgLmNvbnRhbnQgLmF1dGhvciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIG1hcmdpbi1ib3R0b206IDE1cHg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG4jdGVzdGltb25pYWxzIC5jb250YW50IC5hdXRob3IgaW1nIHtcbiAgbWFyZ2luLWJvdHRvbTogNXB4O1xufVxuI3Rlc3RpbW9uaWFscyAuY29udGFudCAuYXV0aG9yID4gZGl2IHtcbiAgbWFyZ2luLWxlZnQ6IDMwcHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cbiN0ZXN0aW1vbmlhbHMgLmNvbnRhbnQgLnRleHQge1xuICBtYXJnaW4tYm90dG9tOiAzMHB4O1xufVxuI3Rlc3RpbW9uaWFscyAuY29udGFudCAudGV4dCBwIHtcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcbiAgZm9udC1zaXplOiAxM3B4O1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgbGluZS1oZWlnaHQ6IDEuNTtcbn1cbiN0ZXN0aW1vbmlhbHMgLmNvbnRhbnQgLm5leHQge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICBtYXJnaW4tYm90dG9tOiAxMDBweDtcbn1cbiN0ZXN0aW1vbmlhbHMgLmNvbnRhbnQgLm5leHQgc3BhbiB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cbiN0ZXN0aW1vbmlhbHMgLmNvbnRhbnQgLm5leHQgaSB7XG4gIG1hcmdpbi1sZWZ0OiAxMHB4O1xufVxuI3Rlc3RpbW9uaWFscyAuY29udGFudCAuYnV0dG9uIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG5cbiIsIkBpbXBvcnQgXCJwYXJ0aWFscy9wYXJhbXNcIjtcclxuQGltcG9ydCBcInBhcnRpYWxzL21peGluc1wiO1xyXG5cclxuLmJ0biB7XHJcbiAgICBwYWRkaW5nOiAxNXB4IDIwcHg7XHJcbiAgICBmb250LXNpemU6IDIwcHg7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICBvdXRsaW5lOiBub25lO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgdHJhbnNpdGlvbjogLjFzIGFsbDtcclxuXHJcbiAgICAmOmFjdGl2ZSB7XHJcbiAgICAgICAgYm94LXNoYWRvdzogaW5zZXQgMCAwIDIwcHggLTNweCByZ2JhKDAsIDAsIDAsIC42KTtcclxuICAgIH1cclxuXHJcbiAgICAmLWxpbmUge1xyXG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICMwMDA7XHJcbiAgICAgICAgY29sb3I6ICMwMDA7XHJcbiAgICAgICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XHJcbiAgICB9XHJcblxyXG4gICAgJi1yZWQge1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IEByZWQtY29sb3I7XHJcbiAgICAgICAgY29sb3I6ICNmZmY7XHJcbiAgICB9XHJcbn0iLCJAaW1wb3J0IFwicGFydGlhbHMvcGFyYW1zXCI7XHJcbkBpbXBvcnQgXCJwYXJ0aWFscy9taXhpbnNcIjtcclxuXHJcbiNmZWF0dXJlcyB7XHJcbiAgICBwYWRkaW5nOiA0MHB4IDAgNjBweDtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuXHJcbiAgICAmIGltZyB7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxuICAgIH1cclxuXHJcbiAgICAmIC50ZXh0IHtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG4gICAgICAgIG1hcmdpbjogMCBhdXRvO1xyXG4gICAgICAgIHdpZHRoOiA5NTBweDtcclxuXHJcbiAgICAgICAgJiA+IGRpdiB7XHJcbiAgICAgICAgICAgIHdpZHRoOiAyNSU7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMjBweDtcclxuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcblxyXG4gICAgICAgICAgICAmID4gZGl2IHtcclxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgJi5maXJzdCA+IGRpdiB7IFxyXG4gICAgICAgICAgICAgICAgcmlnaHQ6IDQ1cHg7XHJcbiAgICAgICAgICAgIH1cclxuICAgIFxyXG4gICAgICAgICAgICAmLnNlY29uZCA+IGRpdiB7XHJcbiAgICAgICAgICAgICAgICByaWdodDogMTRweDtcclxuICAgICAgICAgICAgfVxyXG4gICAgXHJcbiAgICAgICAgICAgICYudGhpcmQgPiBkaXYge1xyXG4gICAgICAgICAgICAgICAgbGVmdDogMjBweDtcclxuICAgICAgICAgICAgfVxyXG4gICAgXHJcbiAgICAgICAgICAgICYuZm91cnRoID4gZGl2IHtcclxuICAgICAgICAgICAgICAgIGxlZnQ6IDU0cHg7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgfVxyXG59IiwiQGltcG9ydCBcInBhcnRpYWxzL3BhcmFtc1wiO1xyXG5AaW1wb3J0IFwicGFydGlhbHMvbWl4aW5zXCI7XHJcblxyXG4jaGVhZGVyIHtcclxuICAgIC5mbGV4LWNlbnRlcjtcclxuICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcclxuICAgIHBhZGRpbmctdG9wOiA0MHB4O1xyXG4gICAgaGVpZ2h0OiA1NDdweDtcclxuICAgIGJhY2tncm91bmQ6IHVybCgnaW1nL2hlYWRlcl9iZy5qcGcnKSBuby1yZXBlYXQ7XHJcbiAgICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxuICBcclxuICAgICYgLnRleHQge1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiA2MHB4O1xyXG5cclxuICAgICAgICAmICoge1xyXG4gICAgICAgICAgICBmb250LXdlaWdodDogbm9ybWFsO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJiBoMSB7XHJcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogNjBweDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICYgaDQge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDMwcHg7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59IiwiLmNsZWFuKCkge1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgcGFkZGluZzogMDtcclxufVxyXG5cclxuLmNsZWFuLWxpc3QoKSB7XHJcbiAgICAuY2xlYW47XHJcbiAgICBsaXN0LXN0eWxlOiBub25lO1xyXG59XHJcblxyXG4uZmxleC1jZW50ZXIoQGRpcjogY29sdW1uKSB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IEBkaXI7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbn0iLCJAaW1wb3J0IFwicGFydGlhbHMvcGFyYW1zXCI7XHJcbkBpbXBvcnQgXCJwYXJ0aWFscy9taXhpbnNcIjtcclxuQGltcG9ydCB1cmwoJ2h0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1Sb2JvdG8mZGlzcGxheT1zd2FwJyk7XHJcblxyXG5cclxuaHRtbCwgYm9keSB7XHJcbiAgICAuY2xlYW47XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGZvbnQtZmFtaWx5OiAnUm9ib3RvJywgc2Fucy1zZXJpZjtcclxuICAgIGNvbG9yOiBAZm9udC1jb2xvcjtcclxufVxyXG5cclxuaDEsIGgyLCBoMywgaDQsIGg1LCBoNiwgcCB7XHJcbiAgICAuY2xlYW47XHJcbn1cclxuXHJcbmEge1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG59XHJcblxyXG4udmlldy1wb3J0IHtcclxuICAgIG1hcmdpbjogMCBhdXRvO1xyXG4gICAgd2lkdGg6IEB2aWV3LXBvcnQ7XHJcbn1cclxuXHJcbi53cmFwcGVyIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogQG1haW4tYmctY29sb3I7XHJcbn0iLCJAaW1wb3J0IFwicGFydGlhbHMvcGFyYW1zXCI7XHJcbkBpbXBvcnQgXCJwYXJ0aWFscy9taXhpbnNcIjtcclxuXHJcbiNuYXYge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBoZWlnaHQ6IEBuYXYtaGVpZ2h0O1xyXG5cclxuICAgICYgLmxlZnQge1xyXG4gICAgICAgICYgaSB7XHJcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMjBweDtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAyNXB4O1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgICAgIHRvcDogMnB4O1xyXG4gICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICAmIHNwYW4ge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMjBweDtcclxuICAgICAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgIH1cclxuXHJcbiAgICAmIC5yaWdodCB7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuXHJcbiAgICAgICAgJiAucGhvbmUge1xyXG4gICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDI1cHg7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDVweCAxNXB4O1xyXG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IEBwcmltYXJ5LWNvbG9yO1xyXG5cclxuICAgICAgICAgICAgJiBzcGFuIHtcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b206IDFweCBkb3R0ZWQgIzAwMDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJiBpIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAyNXB4O1xyXG4gICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG5cclxuXHJcbiIsIkBpbXBvcnQgXCJwYXJ0aWFscy9wYXJhbXNcIjtcclxuQGltcG9ydCBcInBhcnRpYWxzL21peGluc1wiO1xyXG5cclxuI3NvbHV0aW9ucyB7XHJcbiAgICBwYWRkaW5nOiA1MHB4IDQwcHggNzBweDtcclxuXHJcbiAgICAmIGgxIHtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiA2MHB4O1xyXG4gICAgICAgIGZvbnQtc2l6ZTogNDBweDtcclxuICAgICAgICBmb250LXdlaWdodDogbm9ybWFsO1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIH1cclxuXHJcbiAgICAmIC5yb3cge1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XHJcblxyXG4gICAgICAgICYgLnRpbGUge1xyXG4gICAgICAgICAgICBwYWRkaW5nOiA1cHg7XHJcbiAgICAgICAgICAgIHdpZHRoOiAyNSU7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBAcHJpbWFyeS1jb2xvcjtcclxuXHJcbiAgICAgICAgICAgICYgLmJlc3RzZWxsZXIge1xyXG4gICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG5cclxuICAgICAgICAgICAgICAgICYgPiBkaXYge1xyXG4gICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBAcHJpbWFyeS1jb2xvcjtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAmIC5sZWZ0IHtcclxuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMzBweDtcclxuICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDI3cHg7XHJcbiAgICAgICAgICAgICAgICAgICAgbGVmdDogMzlweDtcclxuICAgICAgICAgICAgICAgICAgICB0b3A6IC0xN3B4O1xyXG4gICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAmIC50ZXh0IHtcclxuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiA2cHggMzBweCAwO1xyXG4gICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTNweDtcclxuICAgICAgICAgICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgICAgICAgICAgICAgICAgICBjb2xvcjogQHJlZC1jb2xvcjtcclxuICAgICAgICAgICAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgICAgICAgICAgICAgICAgIHRvcDogLTI0cHg7XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgJiAucmlnaHQge1xyXG4gICAgICAgICAgICAgICAgICAgIGhlaWdodDogMjZweDtcclxuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMzBweDtcclxuICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XHJcbiAgICAgICAgICAgICAgICAgICAgcmlnaHQ6IDM2cHg7XHJcbiAgICAgICAgICAgICAgICAgICAgdG9wOiAtMTdweDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgJiAuaGVhZGVyIHtcclxuICAgICAgICAgICAgICAgIHBhZGRpbmc6IDMwcHg7XHJcblxyXG4gICAgICAgICAgICAgICAgJiBoMyB7XHJcbiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAyNXB4O1xyXG4gICAgICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICYgLmNvbnRlbnQge1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICAgICAgICAgICAgICAgIHBhZGRpbmc6IDE1cHg7XHJcbiAgICAgICAgICAgICAgICBtaW4taGVpZ2h0OiAyMDBweDtcclxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XHJcblxyXG4gICAgICAgICAgICAgICAgJiB1bCB7IFxyXG4gICAgICAgICAgICAgICAgICAgIC5jbGVhbjtcclxuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAxMHB4IDAgMCAzMHB4O1xyXG4gICAgICAgICAgICAgICAgICAgIGxpc3Qtc3R5bGUtaW1hZ2U6IHVybCgnaW1nL2NoZWNrYm94LnBuZycpO1xyXG4gICAgICAgICAgICAgICAgICAgICYgbGkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDEwcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTNweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICYgc3BhbiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b3A6IC03cHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgJiAuY29zdCB7XHJcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDUwcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICAgICAgICAgIGJvdHRvbTogMTBweDtcclxuICAgICAgICAgICAgICAgICAgICByaWdodDogNXB4O1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAmIC5mb290ZXIge1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogNXB4O1xyXG4gICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICAgICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iLCJAaW1wb3J0IFwicGFydGlhbHMvcGFyYW1zXCI7XHJcbkBpbXBvcnQgXCJwYXJ0aWFscy9taXhpbnNcIjtcclxuXHJcbkBicmQtcmFkaXVzOiA1cHg7XHJcblxyXG4jc3RlcHMge1xyXG4gICAgcGFkZGluZzogNTBweCAwO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG5cclxuICAgICYgLnRpbGVzIHtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiA0MHB4O1xyXG5cclxuICAgICAgICAmIC50aWxlIHtcclxuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICAgICAgd2lkdGg6IDI4JTtcclxuXHJcbiAgICAgICAgICAgICYgLmhlYWRlciB7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiA1cHg7XHJcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogQHByaW1hcnktY29sb3I7XHJcbiAgICAgICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICAgICAgICAgIGxldHRlci1zcGFjaW5nOiAycHg7XHJcbiAgICAgICAgICAgICAgICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiBAYnJkLXJhZGl1cztcclxuICAgICAgICAgICAgICAgIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiBAYnJkLXJhZGl1cztcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgJiAuY29udGVudCB7XHJcbiAgICAgICAgICAgICAgICBmbGV4LWdyb3c6IDE7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiA1cHg7XHJcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiAyMHB4O1xyXG4gICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IEBsaWdodC1jb2xvcjtcclxuICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IEBicmQtcmFkaXVzO1xyXG4gICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IEBicmQtcmFkaXVzO1xyXG5cclxuICAgICAgICAgICAgICAgICYgcCB7XHJcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogNXB4O1xyXG4gICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTNweDtcclxuICAgICAgICAgICAgICAgICAgICAmLnJlZCB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiBAcmVkLWNvbG9yO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAmIHVsIHtcclxuICAgICAgICAgICAgICAgICAgICAuY2xlYW47XHJcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogMTBweCAwIDAgMTNweDtcclxuICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDEzcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgJiBsaSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAyO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxufSAiLCJAaW1wb3J0IFwicGFydGlhbHMvcGFyYW1zXCI7XHJcbkBpbXBvcnQgXCJwYXJ0aWFscy9taXhpbnNcIjtcclxuXHJcbiN0ZXN0aW1vbmlhbHMge1xyXG4gICAgbWluLWhlaWdodDogNzY3cHg7XHJcbiAgICBiYWNrZ3JvdW5kOiB1cmwoXCJpbWcvZm9vdGVyX2JnLmpwZ1wiKSBuby1yZXBlYXQ7XHJcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG4gICAgXHJcbiAgICAmIC5jb250YW50IHtcclxuICAgICAgICBwYWRkaW5nOiAyMHB4O1xyXG4gICAgICAgIHdpZHRoOiA1MCU7XHJcblxyXG4gICAgICAgICYgaDEge1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDQwcHg7XHJcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XHJcbiAgICAgICAgICAgIGxldHRlci1zcGFjaW5nOiAycHg7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmIC5hdXRob3Ige1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxNXB4O1xyXG4gICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cclxuICAgICAgICAgICAgJiBpbWcge1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogNXB4O1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAmID4gZGl2IHtcclxuICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAzMHB4O1xyXG4gICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJiAudGV4dCB7XHJcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDMwcHg7XHJcblxyXG4gICAgICAgICAgICAmIHAge1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTNweDtcclxuICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDEuNTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJiAubmV4dCB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XHJcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDEwMHB4O1xyXG5cclxuICAgICAgICAgICAgJiBzcGFuIHtcclxuICAgICAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgJiBpIHtcclxuICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmIC5idXR0b24ge1xyXG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59Il19 */
