.clean {
  margin: 0;
  padding: 0;
}
.clean-list {
  margin: 0;
  padding: 0;
  list-style: none;
}
#advantage {
  padding: 40px 40px 60px;
  text-align: center;
  background-color: #f3f0e7;
}
#advantage h1 {
  margin-bottom: 35px;
  font-size: 40px;
  font-weight: normal;
  letter-spacing: 2px;
}
#advantage .row {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: distribute;
      justify-content: space-around;
  margin-bottom: 60px;
}
#advantage .row .col {
  padding: 10px;
}
#advantage .row .col img {
  margin-bottom: 20px;
}
#advantage .row .col h3 {
  margin-bottom: 20px;
}

.clean {
  margin: 0;
  padding: 0;
}
.clean-list {
  margin: 0;
  padding: 0;
  list-style: none;
}
.btn {
  padding: 15px 20px;
  font-size: 20px;
  border: none;
  border-radius: 10px;
  text-transform: uppercase;
  outline: none;
  cursor: pointer;
  transition: .1s all;
}
.btn:active {
  box-shadow: inset 0 0 20px -3px rgba(0, 0, 0, 0.6);
}
.btn-line {
  border: 1px solid #000;
  color: #000;
  background: transparent;
}
.btn-red {
  background-color: #ee5454;
  color: #fff;
}

.clean {
  margin: 0;
  padding: 0;
}
.clean-list {
  margin: 0;
  padding: 0;
  list-style: none;
}
#features {
  padding: 40px 0 60px;
  text-align: center;
}
#features img {
  margin-bottom: 20px;
}
#features .text {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: distribute;
      justify-content: space-around;
  margin: 0 auto;
  width: 950px;
}
#features .text > div {
  width: 25%;
  font-size: 20px;
  font-weight: bold;
}
#features .text > div > div {
  position: relative;
}
#features .text > div.first > div {
  right: 45px;
}
#features .text > div.second > div {
  right: 14px;
}
#features .text > div.third > div {
  left: 20px;
}
#features .text > div.fourth > div {
  left: 54px;
}

.clean {
  margin: 0;
  padding: 0;
}
.clean-list {
  margin: 0;
  padding: 0;
  list-style: none;
}
#header {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
      flex-direction: column;
  -ms-flex-align: center;
      align-items: center;
  -ms-flex-pack: center;
      justify-content: center;
  -ms-flex-pack: start;
      justify-content: flex-start;
  padding-top: 40px;
  height: 547px;
  background: url('img/header_bg.jpg') no-repeat;
  background-size: cover;
}
#header .text {
  text-align: center;
  margin-bottom: 60px;
}
#header .text * {
  font-weight: normal;
}
#header .text h1 {
  margin-bottom: 20px;
  font-size: 60px;
}
#header .text h4 {
  font-size: 30px;
}

@import url('https://fonts.googleapis.com/css?family=Roboto&display=swap');
.clean {
  margin: 0;
  padding: 0;
}
.clean-list {
  margin: 0;
  padding: 0;
  list-style: none;
}
html,
body {
  margin: 0;
  padding: 0;
  width: 100%;
  font-family: 'Roboto', sans-serif;
  color: #000;
}
h1,
h2,
h3,
h4,
h5,
h6,
p {
  margin: 0;
  padding: 0;
}
a {
  text-decoration: none;
}
.view-port {
  margin: 0 auto;
  width: 1000px;
}
.wrapper {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
      flex-direction: column;
  width: 100%;
  overflow: hidden;
  background-color: #fff;
}

.clean {
  margin: 0;
  padding: 0;
}
.clean-list {
  margin: 0;
  padding: 0;
  list-style: none;
}
#nav {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: justify;
      justify-content: space-between;
  -ms-flex-align: center;
      align-items: center;
  height: 80px;
}
#nav .left i {
  margin-right: 20px;
  font-size: 25px;
  position: relative;
  top: 2px;
  cursor: pointer;
}
#nav span {
  font-size: 20px;
  font-weight: bold;
}
#nav .right {
  display: -ms-flexbox;
  display: flex;
}
#nav .right .phone {
  margin-right: 25px;
  padding: 5px 15px;
  text-align: center;
  border-radius: 10px;
  background-color: #ffd200;
}
#nav .right .phone span {
  font-size: 14px;
  border-bottom: 1px dotted #000;
}
#nav .right i {
  font-size: 25px;
  cursor: pointer;
}

.clean {
  margin: 0;
  padding: 0;
}
.clean-list {
  margin: 0;
  padding: 0;
  list-style: none;
}


/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
